1.  What change I do in my scanner? 
將 lex.l 裡面 token 加上 return 值(值可以自己取名並在 parser.y 宣告)，並將
main 註解掉(因兩個 main 會出現 redifinition 的情況)，然後在最上面 include 
“y.tab.h”。
2.  The abilities of my parser
此 parser 主要是將 P 語言的規則轉成 CFG，並判斷這語法合不合法。
P 語言的規則則是參考講義上所寫的規則實作。
因為要用 lex.l 裡 return 的 terminal，所以在 parser.y 的最上面要標註
%token …當作宣告。
3.  The platform to run my parser
系計中的工作站(在 ubuntu 內開啟工作站)
4.  How to run my parser
將以下內容寫入 Makefile
TARGET = parser
OBJECT = lex.yy.c y.tab.h y.tab.c
CC = gcc -g
LEX = flex
LIBS = -lfl -ly
YACC = yacc -d -v
all: lex.yy.c y.tab.c
$(CC) lex.yy.c y.tab.c -o $(TARGET) $(LIBS)
y.tab.c: parser.y
$(YACC) parser.y 
lex.yy.c: lex.l
$(LEX) lex.l
clean:
rm -f $(TARGET) $(OBJECT)
存檔後輸入 make 指令即可跑出 parser .output 檔，再輸入./parser  檔名即可
運作。 